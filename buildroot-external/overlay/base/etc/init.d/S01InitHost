#!/bin/sh
#
# startup script to identify the host hardware
#

identify_host() {

  # default/fallback values
  HM_HOST=""
  HM_MODE="NORMAL"
  HM_LED_GREEN=""
  HM_LED_GREEN_MODE1="mmc0"
  HM_LED_GREEN_MODE2="heartbeat"
  HM_LED_RED=""
  HM_LED_RED_MODE1="timer"
  HM_LED_RED_MODE2="mmc0"
  HM_LED_YELLOW=""
  HM_LED_YELLOW_MODE1="none"
  HM_LED_YELLOW_MODE2="none"

  # identify the RaspberryPi version used
  # http://elinux.org/RPi_HardwareHistory
  # https://github.com/MilhouseVH/bcmstat/blob/master/bcmstat.sh#L67
  hostid=$(cat /proc/cpuinfo | grep 'Revision' | awk '{print $3}')
  case "${hostid}" in
    *c03111)                                         HM_HOST="rpi4b4g"    ;; # Raspberry Pi 4 Model B/4GB
    *b03111)                                         HM_HOST="rpi4b2g"    ;; # Raspberry Pi 4 Model B/2GB
    *a03111)                                         HM_HOST="rpi4b1g"    ;; # Raspberry Pi 4 Model B/1GB
    *a020d3)                                         HM_HOST="rpi3p"      ;; # Raspberry Pi 3 Model B+
    *a02080|*a02082|*a22082|*a32082)                 HM_HOST="rpi3"       ;; # Raspberry Pi 3 Model B
    *9020e0)                                         HM_HOST="rpi3ap"     ;; # Raspberry Pi 3 Model A+
    *a020a0)                                         HM_HOST="rpi3cm"     ;; # Raspberry Pi Compute Module 3
    *a01040|*a01041|*a02041|*a02042|*a21041|*a22042) HM_HOST="rpi2"       ;; # Raspberry Pi 2 Model B
    *9000c?)                                         HM_HOST="rpi0w"      ;; # Raspberry Pi Zero W
    *90009?|*920093)                                 HM_HOST="rpi0"       ;; # Raspberry Pi Zero
    *0011|*0014)                                     HM_HOST="rpi1cm"     ;; # Raspberry Pi Compute Module 1
    *0010|*0013|*900032|*90003f)                     HM_HOST="rpi1bp"     ;; # Raspberry Pi B+/512MB
    *0015|*900021|*900012)                           HM_HOST="rpi1ap512"  ;; # Raspberry Pi A+/512MB
    *0012)                                           HM_HOST="rpi1ap256"  ;; # Raspberry Pi A+/256MB
    *000d|*000e|*000f)                               HM_HOST="rpi1b512"   ;; # Raspberry Pi B/512MB
    *0002|*0003|*0004|*0005|*0006)                   HM_HOST="rpi1b256"   ;; # Raspberry Pi B/256MB
    *0007|*0008|*0009)                               HM_HOST="rpi1a"      ;; # Raspberry Pi A/256MB

    # No RaspberryPi identified, try other boards
    *)
      hardware=$(cat /proc/cpuinfo | grep 'Hardware' | awk '{print $3}')
      case "${hardware}" in
        # ASUS Tinkerboard
        Rockchip)
          HM_HOST="tinkerboard"
        ;;
      esac
    ;;
  esac

  # if HOST is still empty we fall back to RaspberryPi3
  if [[ -z "${HM_HOST}" ]]; then
    HM_HOST="rpi3"
    echo "couldn't identify hardware platform (${hostid}). Using RaspberryPi3 as fallback"
  fi

  # depending on the host hardware we have to define different
  # HM settings
  case "${HM_HOST}" in

    # RaspberryPi
    rpi*)
      HM_LED_GREEN="/sys/class/leds/led0"
      HM_LED_RED="/sys/class/leds/led1"
      HM_LED_YELLOW=""

      # if we are running on a raspberrypi we
      # disable the HDMI port in case no cable is
      # connected. This is to save power, but also
      # to reduce potential interferences with the
      # GPIO-based RF modules
      hdmi_state=$(/usr/bin/tvservice -s | cut -d' ' -f2)

      # if the least significant bit is set the
      # HDMI cable seems to be unplugged
      if [[ $(((${hdmi_state} & 0x01) == 1)) -eq 1 ]]; then
        /usr/bin/tvservice --off
        /usr/bin/vcgencmd display_power 0
      fi
    ;;

    # ASUS Tinkerboard
    tinkerboard*)
      HM_LED_GREEN="/sys/class/leds/act-led"
      HM_LED_RED="/sys/class/leds/pwr-led"
      HM_LED_YELLOW="/sys/class/leds/heartbeat-led"
    ;;

    *)
      echo "ERROR: couldn't identify host hardware: ${hostid}"
    ;;

  esac

  # make sure the LEDs are actually setup correctly
  if [[ -f "${HM_LED_GREEN}/trigger" ]]; then
    echo ${HM_LED_GREEN_MODE1} >${HM_LED_GREEN}/trigger
  fi
  if [[ -f "${HM_LED_RED}/trigger" ]]; then
    echo ${HM_LED_RED_MODE1} >${HM_LED_RED}/trigger
  fi
  if [[ -f "${HM_LED_YELLOW}/trigger" ]]; then
    echo ${HM_LED_YELLOW_MODE1} >${HM_LED_YELLOW}/trigger
  fi
}

start() {
  echo -n "Identifying onboard hardware: "

  # source all data from /var/hm_mode
  [[ -r /var/hm_mode ]] && . /var/hm_mode

  identify_host

  # save all HM_ env variables
  set | grep '^HM_' >/var/hm_mode

  if [[ -n "${HM_HOST}" ]]; then
    echo "${HM_HOST}, OK"
  else
    echo "ERROR"
  fi
}

restart() {
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    # nothing
  ;;
  restart|reload)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
